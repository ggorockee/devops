nameOverride: ""
fullnameOverride: ""

deployment:
  replicaCount: 1

  image:
    repository: 381492074864.dkr.ecr.ap-northeast-2.amazonaws.com/dolphindance-api
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "4c988c"

  imagePullSecrets:
  - name: ecr-regcred

  extraPorts: []
  # - name: "port"
  #   containerPort: "1231"
  #   protocol: TCP
  #   servicePort: "1231"


  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  readinessProbe: {}
    # httpGet:
    #   path: /
    #   port: http

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

    # targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

  secretEnv:
    enable: false
    names:
      - foo
      - poo


  configMapEnv:
    enable: false
    names:
      - foo
      - poo


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


service:
  type: ClusterIP

  # port setting
  port: 3000
  targetPort: 3000
  protocol: TCP
  name: fiber

  extraPorts: []
  # - name: "ha"
  #   containerPort: "1231"
  #   protocol: TCP
