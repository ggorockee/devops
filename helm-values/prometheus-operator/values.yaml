prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false

    # add serviceMonitor
  additionalServiceMonitors:
  - name: promethes-operator-istiod
    additionalLabels:
      app: istiod
    # jobLabel: ""
    # targetLabels: []
    # podTargetLabels: []
    selector:
      matchLabels:
        app: istiod
    namespaceSelector:
      any: true
    endpoints:
    - path: /metrics
      port: http-monitoring
    # metricRelabelings: []
    # - action: keep
    #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
    #   sourceLabels: [__name__]
    
    # relabelings: []
    # - sourceLabels: [__meta_kubernetes_pod_node_name]
    #   separator: ;
    #   regex: ^(.*)$
    #   targetLabel: nodename
    #   replacement: $1
    #   action: replace
    
    # add podMonitor
  additionalPodMonitors:
  - name: envoy-stats-monitor
    # additionalLabels: {}
    jobLabel: "envoy-stats"
    selector:
      matchExpressions:
      - {key: istio-prometheus-ignore, operator: DoesNotExist}
    # podTargetLabels: {}
    # sampleLimit: 0
    namespaceSelector:
      any: true
    podMetricsEndpoints:
    - path: /stats/prometheus
      interval: 15s
      relabelings:
      - action: keep
        sourceLabels: [__meta_kubernetes_pod_container_name]
        regex: "istio-proxy"
      - action: keep
        sourceLabels: [__meta_kubernetes_pod_annotationpresent_prometheus_io_scrape]
      - action: replace
        regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
        replacement: '[$2]:$1'
        sourceLabels:
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        - __meta_kubernetes_pod_ip
        targetLabel: __address__
      - action: replace
        regex: (\d+);((([0-9]+?)(\.|$)){4})
        replacement: $2:$1
        sourceLabels:
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        - __meta_kubernetes_pod_ip
        targetLabel: __address__
      - action: labeldrop
        regex: "__meta_kubernetes_pod_label_(.+)"
      - sourceLabels: [__meta_kubernetes_namespace]
        action: replace
        targetLabel: namespace
      - sourceLabels: [__meta_kubernetes_pod_name]
        action: replace
        targetLabel: pod_name

prometheus-node-exporter:
  prometheus:
    monitor:
      relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        separator: ;
        regex: ^(.*)$
        targetLabel: nodename
        replacement: $1
        action: replace

grafana:
  envRenderSecret: {}
  envFromSecrets:
  - name: grafana-azure-secret
  - name: grafana-google-secret

  grafana.ini:
    server:
      root_url: https://grafana.dev.ggorockee.com
    auth.azuread:
      name: Teams
      enabled: true
      allow_sign_up: true
      auto_login: false
      client_id: ${AZURE_CLIENT_ID}
      client_secret: ${AZURE_CLIENT_SECRET}
      scopes: openid email profile
      auth_url: ${AZURE_AUTH_URL}
      token_url: ${AZURE_TOKEN_URL}
      # allowed_groups: ${AZURE_ADMIN_GROUP}
      allowed_organizations: ${AZURE_TENANT_ID}
      role_attribute_strict: false
      allow_assign_grafana_admin: true
      skip_org_role_sync: false
      use_pkce: true

    auth.google:
      enabled: true
      allow_sign_up: true
      auto_login: false
      client_id: ${GOOGLE_CLIENT_ID}
      client_secret: ${GOOGLE_CLIENT_SECRET}
      # scopes: openid email profile
      scopes: openid email profile https://www.googleapis.com/auth/cloud-identity.groups.readonly
      auth_url: https://accounts.google.com/o/oauth2/v2/auth
      token_url: https://oauth2.googleapis.com/token
      api_url: https://openidconnect.googleapis.com/v1/userinfo
      allowed_domains: ggorockee.com
      hosted_domain: ggorockee.com
      use_pkce: true
      # org_mapping: devops:ggorockee.com:Admin viewer:ggorockee.com:Viewer
      # allowed_groups: devops@google.com, viewer@google.com
      role_attribute_path: contains(groups[*], 'devops@ggorockee.com') && 'Admin' || 'Editor'
      skip_org_role_sync: false

  persistence:
    type: pvc
    enabled: true
    storageClassName: standard
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    finalizers:
      - kubernetes.io/pvc-protection


## docs
# https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/google/