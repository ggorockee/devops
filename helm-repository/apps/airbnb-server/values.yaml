replicaCount: 1
image:
  repository: ggorockee/airbnb-server
  pullPolicy: Always
  tag: 835ec9
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ''
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
configmap: []
secret: []
service:
  type: ClusterIP
  port: 8080
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi
livenessProbe:
  httpGet:
    path: /healthz/ready
    port: 8080
readinessProbe:
  httpGet:
    path: /healthz/ready
    port: 8080
  initialDelaySeconds: 60
  timeoutSeconds: 5
  periodSeconds: 10
  successThreshold: 2
  failureThreshold: 2
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}

### db
db:
  secret:
  - name: db-config-map
    data:
      ACCOUNTS_DB_URI: postgresql://accounts-admin:accounts-pwd@accounts-db:5432/accounts-db
      POSTGRES_HOST: ""
      POSTGRES_DB: accounts-db
      POSTGRES_PASSWORD: accounts-pwd
      POSTGRES_USER: accounts-admin

  configmap: []
   # - name: foo
   #   data:
   #     foo: var
   #     poo: var1

  service:
    type: ClusterIP
    port: 5432

  statefulset:
    replicaCount: 1

    image:
      repository: postgres
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "16.4-alpine3.20"

    imagePullSecrets: []

    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Automatically mount a ServiceAccount's API credentials?
      automount: true
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    podAnnotations: {}
    podLabels: {}

    podSecurityContext: {}
    # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 250m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi

    livenessProbe: {}

    readinessProbe: {}

    volumes:
      - emptyDir: {}
        name: postgresdb
    # - name: foo
    #   secret:
    #     secretName: mysecret
    #     optional: false

    # Additional volumeMounts on the output Deployment definition.
    volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgresdb
        subPath: postgres
    # - name: foo
    #   mountPath: "/etc/foo"
    #   readOnly: true

    nodeSelector: {}

    tolerations: []

    affinity: {}