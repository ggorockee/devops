replicaCount: 1
image:
  repository: ggorockee/airbnb-server
  pullPolicy: Always
  tag: a6758a
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ''
podAnnotations: {}
podLabels: {}
podSecurityContext: {}
securityContext: {}
configmap: []
secret: []
service:
  type: ClusterIP
  port: 8080
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi
livenessProbe: {}
#  httpGet:
#    path: /healthz/ready
#    port: 8080
readinessProbe: {}
#  httpGet:
#    path: /healthz/ready
#    port: 8080
#  initialDelaySeconds: 60
#  timeoutSeconds: 5
#  periodSeconds: 10
#  successThreshold: 2
#  failureThreshold: 2
autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}
command:
  - /bin/sh
  - '-c'
args:
  - |
    python manage.py makemigrations
    python manage.py migrate
    python manage.py runserver 0.0.0.0:8080
db:
  secret:
    - name: db-config-map
      data:
        ACCOUNTS_DB_URI: postgresql://accounts-admin:accounts-pwd@accounts-db:5432/accounts-db
        POSTGRES_HOST: ''
        POSTGRES_DB: accounts-db
        POSTGRES_PASSWORD: accounts-pwd
        POSTGRES_USER: accounts-admin
  configmap: []
  service:
    type: ClusterIP
    port: 5432
  statefulset:
    replicaCount: 1
    image:
      repository: postgres
      pullPolicy: IfNotPresent
      tag: 16.4-alpine3.20
    imagePullSecrets: []
    serviceAccount:
      create: true
      automount: true
      annotations: {}
      name: ''
    podAnnotations: {}
    podLabels: {}
    podSecurityContext: {}
    securityContext: {}
    resources:
      limits:
        cpu: 250m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    livenessProbe: {}
    readinessProbe: {}
    volumes:
      - emptyDir: {}
        name: postgresdb
    volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: postgresdb
        subPath: postgres
    nodeSelector: {}
    tolerations: []
    affinity: {}
