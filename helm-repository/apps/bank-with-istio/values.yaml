# account                   [v]
# balanceReader             [v]
# contacts                  [v]
# frontend                  [v]
# leaderDb                  [v]
# leaderWriter              [v]
# loadgenerator             [v]
# transiactionHistory       [v]
# userService


userService:
  name: &userservice_name userservice
  labels:
    team: accounts
    tier: backend
    app: *userservice_name

  service:
    portName: http
    port: 8080
    targetPort: 8080
    type: ClusterIP

  deployment:
    annotations:
      proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
    
    image:
      repository: "us-central1-docker.pkg.dev/bank-of-anthos-ci/bank-of-anthos/userservice"
      tag: "v0.6.5"
      sha: "sha256:f91e0e5bd6cdb16f6b867b2e3e874b23dd01f11592de006776f1dfb136702941"

    port:
      containerPort: 8080
      name: http-server

    readinessProbe: 
      httpGet:
        path: /ready
        port: 8080
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 10
    resources: 
      limits:
        cpu: 500m
        ephemeral-storage: 0.25Gi
        memory: 256Mi
      requests:
        cpu: 260m
        ephemeral-storage: 0.25Gi
        memory: 128Mi
    podSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - all
      privileged: false
      readOnlyRootFilesystem: true
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000

transactionhistory:
  name: &transactionhistory_name transactionhistory
  labels:
    team: ledger
    tier: backend
    app: *transactionhistory_name

  service:
    portName: http
    port: 8080
    targetPort: 8080
    type: ClusterIP

  deployment:
    annotations: 
      proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
      
    image:
      repository: "us-central1-docker.pkg.dev/bank-of-anthos-ci/bank-of-anthos/transactionhistory"
      tag: "v0.6.5"
      sha: "sha256:54a2b0866df44a50832e71b130f3e069fe8bbce71309fb6cf390b19f64d92c09"

    livenessProbe:
      httpGet:
        path: /healthy
        port: 8080
      initialDelaySeconds: 120
      periodSeconds: 5
      timeoutSeconds: 10

    readinessProbe:
      httpGet:
        path: /ready
        port: 8080
      initialDelaySeconds: 60
      periodSeconds: 5
      timeoutSeconds: 10

    resources:
      limits:
        cpu: 500m
        ephemeral-storage: 0.5Gi
        memory: 512Mi
      requests:
        cpu: 100m
        ephemeral-storage: 0.5Gi
        memory: 256Mi

    podSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - all
      privileged: false
      readOnlyRootFilesystem: true

    startupProbe:
      failureThreshold: 30
      httpGet:
        path: /healthy
        port: 8080
      periodSeconds: 10

    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000

loadgenerator:
  name: &loadgenerator_name loadgenerator
  labels:
    tier: test
    team: *loadgenerator_name
    app: *loadgenerator_name

  deployment:
    replicas: 1
    annotations:
      sidecar.istio.io/rewriteAppHTTPProbers: "true"

    image:
      repository: "us-central1-docker.pkg.dev/bank-of-anthos-ci/bank-of-anthos/loadgenerator"
      tag: "v0.6.5"
      sha: "sha256:24369e6b21c773d6afc016997d805b08b1a3ec1c5a6e1d281298180f2f45e0b5"

    resources:
      limits:
        cpu: 250m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi
    podSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - all
      privileged: false
      readOnlyRootFilesystem: true
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000

leaderWriter:
  name: &leader_writer_name ledgerwriter
  labels:
    team: ledger
    tier: backend
    app: *leader_writer_name

  service:
    portName: http
    port: 8080
    targetPort: 8080
    type: ClusterIP

  deployment:
    image:
      repository: "us-central1-docker.pkg.dev/bank-of-anthos-ci/bank-of-anthos/ledgerwriter"
      tag: "v0.6.5"
      sha: "sha256:5b66d6888b87993c8ebe260fe33005c4e4bc2bdae4b5682874e1a078d37ff3b2"
    readinessProbe:
      httpGet:
        path: /ready
        port: 8080
      initialDelaySeconds: 60
      periodSeconds: 5
      timeoutSeconds: 10
    resources:
      limits:
        cpu: 500m
        ephemeral-storage: 0.5Gi
        memory: 512Mi
      requests:
        cpu: 100m
        ephemeral-storage: 0.5Gi
        memory: 256Mi
    podSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - all
      privileged: false
      readOnlyRootFilesystem: true
    startupProbe:
      failureThreshold: 30
      httpGet:
        path: /ready
        port: 8080
      periodSeconds: 10
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000

frontend:
  name: &frontend_name frontend
  labels:
    team: *frontend_name
    tier: web
    app: *frontend_name

  service:
    portName: http
    port: 80
    targetPort: 8080
    type: LoadBalancer

  deployment:
    image:
      repository: "us-central1-docker.pkg.dev/bank-of-anthos-ci/bank-of-anthos/frontend"
      tag: "v0.6.5"
      sha: "sha256:d72050f70d12383e4434ad04d189b681dc625f696087ddf0b5df641645c9dafa"

    livenessProbe:
      httpGet:
        path: /ready
        port: 8080
      initialDelaySeconds: 60
      periodSeconds: 15
      timeoutSeconds: 30

    readinessProbe:
      httpGet:
        path: /ready
        port: 8080
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 10

    resources:
      limits:
        cpu: 250m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 64Mi

    podSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - all
      privileged: false
      readOnlyRootFilesystem: true

    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000

  ingress:
    enable: true
    domain: "bank.ggorockee.com"
    virtualService:
      name: frontend-ingress
      hosts:
        - "bank.ggorockee.com"
      gateways:
        - frontend-gateway
      http:
        - route:
          - destination:
              host: frontend
              port:
                number: 80
    
    gateways:
      name: frontend-gateway
      servers:
        - port:
            number: 80
            name: http
            protocol: HTTP
          hosts:
          - "bank.ggorockee.com"

    backendConfig:
      healthCheck:
        checkIntervalSec: 30
        timeoutSec: 5
        healthyThreshold: 1
        unhealthyThreshold: 2
        type: HTTP
        requestPath: /healthz
        port: 8080

    frontendConfig:
      redirectToHttps:
        enabled: true
        responseCodeName: PERMANENT_REDIRECT

    managedCertificate:
      domains:
        - bank.ggorockee.com

contacts:
  name: &contacts_name contacts

  labels:
    team: accounts
    tier: backend
    app: *contacts_name

  service:
    portName: http
    port: 8080
    targetPort: 8080
    type: ClusterIP

  configmap:
    name: accounts-db-config
    data:
        ACCOUNTS_DB_URI: postgresql://accounts-admin:accounts-pwd@accounts-db:5432/accounts-db
        POSTGRES_DB: accounts-db
        POSTGRES_PASSWORD: accounts-pwd
        POSTGRES_USER: accounts-admin

  
  deployment:
    image:
      repository: "us-central1-docker.pkg.dev/bank-of-anthos-ci/bank-of-anthos/contacts"
      tag: "v0.6.5"
      sha: "sha256:e451dcac7d34a7bde979c7f02d4c7ebd83a77aff373e1131ce3a2bba2f7fdc1a"
    readinessProbe:
      httpGet:
        path: /ready
        port: 8080
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 10
    resources:
      limits:
        cpu: 250m
        ephemeral-storage: 0.25Gi
        memory: 128Mi
      requests:
        cpu: 100m
        ephemeral-storage: 0.25Gi
        memory: 64Mi
    securityContext: 
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - all
      privileged: false
      readOnlyRootFilesystem: true


account:
  name: accounts-db

  labels:
    app: accounts-db
    application: bank-of-anthos
    environment: development
    team: accounts
    tier: db

  configmap:
    name: accounts-db-config
    data:
      ACCOUNTS_DB_URI: postgresql://accounts-admin:accounts-pwd@accounts-db:5432/accounts-db
      POSTGRES_DB: accounts-db
      POSTGRES_PASSWORD: accounts-pwd
      POSTGRES_USER: accounts-admin

  service:
    ports:
      - name: tcp
        port: 5432
        protocol: TCP
        targetPort: 5432
    type: ClusterIP

  statefulset:
    replicas: 1
    labels: {}

leaderDb:
  name: &ledger-db-name ledger-db
  labels:
    app: *ledger-db-name
    team: ledger
    tier: db

  configmap:
    data:
      POSTGRES_DB: postgresdb
      POSTGRES_PASSWORD: password
      POSTGRES_USER: admin
      POSTGRES_HOST_AUTH_METHOD: trust
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_URL: jdbc:postgresql://ledger-db:5432/postgresdb
      SPRING_DATASOURCE_USERNAME: admin

  service:
    port:
      name: tcp
      port: 5432
      targetPort: 5432
    type: ClusterIP

  statefulset:
    replicas: 1
    image:
      tag: "v0.6.5"
      sha: "sha256:cc4fd25f301ab6d46b1312244d6931babc4c6cb66c5cb6d31d4a1adfa318a321"
      repository: "us-central1-docker.pkg.dev/bank-of-anthos-ci/bank-of-anthos/ledger-db"

balanceReader:
  name: &balance-reader-name balancereader
  labels:
    app: *balance-reader-name
    team: ledger
    tier: backend

  deployment:
    image:
      repository: "us-central1-docker.pkg.dev/bank-of-anthos-ci/bank-of-anthos/balancereader"
      tag: "v0.6.5"
      sha: "sha256:de01f16554ae2d0b49ac85116e6307da8c0f8a35f50a0cf25e1e4a4fe18dca83"
    livenessProbe:
      httpGet:
        path: /healthy
        port: 8080
      initialDelaySeconds: 120
      periodSeconds: 5
      timeoutSeconds: 10
    readinessProbe:
      httpGet:
        path: /ready
        port: 8080
      initialDelaySeconds: 60
      periodSeconds: 5
      timeoutSeconds: 10

  service:
    ports:
      name: http
      port: 8080
      targetPort: 8080
    type: ClusterIP




serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations:
    iam.gke.io/gcp-service-account: gke-workload-development@bank-of-anthos-ci.iam.gserviceaccount.com
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "bank-of-anthos"

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

extraConfig:
  - name: environment-config
    data:
      LOCAL_ROUTING_NUM: "883745000"
      PUB_KEY_PATH: "/tmp/.ssh/publickey"
  - name: service-api-config
    data:
      TRANSACTIONS_API_ADDR: "ledgerwriter:8080"
      BALANCES_API_ADDR: "balancereader:8080"
      HISTORY_API_ADDR: "transactionhistory:8080"
      CONTACTS_API_ADDR: "contacts:8080"
      USERSERVICE_API_ADDR: "userservice:8080"
  - name: demo-data-config
    data:
      USE_DEMO_DATA: "True"
      DEMO_LOGIN_USERNAME: "testuser"
      # All demo user accounts are hardcoded to use the login password 'bankofanthos'
      DEMO_LOGIN_PASSWORD: "bankofanthos"